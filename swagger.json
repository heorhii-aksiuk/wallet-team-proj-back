{
  "openapi": "3.0.1",
  "info": {
    "version": "1.1.0",
    "title": "Wallet end-point routes",
    "description": "Wallet web application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { 
      "url": "",
      "description": "Product service"
    },

    { 
      "url": "http://localhost:3000",
      "description": "Development service"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statisctics endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
          
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
      
        "requestBody": {
          "description": "Login`s object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid user, user not found!",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],
          
        "requestBody": {
          "description": "Logout`s object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Getting statistic",
        "parameters": [
          {
            "in": "body",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-04-17"
            }
          },
          {
            "in": "body",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-05-17"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getStatisticsSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getStatisticsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/hardcoded": {
      "get": {
        "tags": ["Categories"],
        "summary": "Getting hardcoded categories",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getHardcodedCategoriesSuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Categories"],
        "summary": "Add a new category",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add category",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createCategorySuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createCategoryErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Categories"],
        "summary": "All categories",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoriesSuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Getting category by ID",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategorySuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invalidDbIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resourceNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Updating category by ID",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update category",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategorySuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createCategoryErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resourceNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Deleting category by ID",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteCategorySuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invalidDbIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resourceNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Creating a new transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Create transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTransactionSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTransactionErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Getting all transactions",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-04-20"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2022-05-20"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTransactionsSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/queryParamsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Getting transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTransactionSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invalidDbIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resourceNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Transactions"],
        "summary": "Updating transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTransactionSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTransactionErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resourceNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Deleting transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "description": "Transaction ID",
            "schema": {
              "type": "string",
              "example": "628682f56ae1b0812d14a878"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteTransactionSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invalidDbIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/resourceNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/current":{
      "get": {
        "tags": ["Current"],
        "summary": "Current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
      
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid user, user not found!",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password", "repeatPassword"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andrii"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "repeatPassword": {
            "type": "string",
            "description": "User's repeat password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andrii"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": "32143232436545474"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",  
            "email": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "zxcv1234"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": "zuidhgeui8128329ksjd"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andrii"
          },
          "token": {
            "type": "integer",
            "description": "User's id",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyODU0ZjA1NzhlMDc1ZjFiMThlODA3NCIsImlhdCI6MTY1MzA1MjQwNSwiZXhwIjoxNjUzMDU5NjA1fQ.Nbtusa-2Y2GZyxtFW-RR-BkYx38dF2O7eUFBFqr_I3V"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": "zuidhgeui8128329ksjd"
          }
        }
      },
      "LogoutResponse": {
        "type": "string",
        "description": "No content"
      },
      "getStatisticsSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer", 
            "description": "HTTP code",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "Statistics for given period and balance totals",
            "properties": {
              "statistics": {
                "type": "array",
                "description": "Array of statistics objects",
                "items": {
                  "properties": {
                    "category": {
                      "type": "string",
                      "description": "Category of transaction",
                      "example": "Регулярный доход"
                    },
                    "income": {
                      "type": "boolean",
                      "description": "Is category an income",
                      "example": true
                    },
                    "sum": {
                      "type": "integer",
                      "description": "Total amount of this type of transaction within given period",
                      "example": 500
                    },
                    "color": {
                      "type": "string",
                      "description": "Color of the transaction category",
                      "example": "#6e78e8"
                    }
                  }
                }
              },
              "totals": {
                "type": "object",
                "properties": {
                  "income": {
                    "type": "integer",
                    "description": "Amount of total income within given period",
                    "example": 500
                  },
                  "expense": {
                    "type": "integer",
                    "description": "Amount of total expenses within given period",
                    "example": 200
                  },
                  "balance": {
                    "type": "integer",
                    "description": "Amount of total current balance within given period",
                    "example": 300
                  }
                }
              },
              "earliest": {
                "type": "string",
                "description": "Date the transaction was made indicated by user",
                "example": "2022-05-19T00:00:00.000Z"
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "statistics": [
              {
                "category": "Регулярный доход",
                "income": true,
                "sum": 1500,
                "color": "#1b5e20"
              },
              {
                "category": "Основные расходы",
                "income": false,
                "sum": 200,
                "color": "#fed057"
              },
              {
                "category": "Машина",
                "income": false,
                "sum": 300,
                "color": "#6e78e8"
              },
              {
                "category": "Продукты",
                "income": false,
                "sum": 400,
                "color": "#4a56e2"
              }
            ],
            "totals": {
              "income": 500,
              "expense": 900,
              "balance": 600
            },
            "earliest": "2022-05-19T00:00:00.000Z"
          }
        }
      },
      "getStatisticsErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Joi validation error message",
            "example": "'endDate' is required"
          }
        }
      },
      "getHardcodedCategoriesSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "Array of categories ojects",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Category of transaction",
                  "example": "Регулярный доход"
                },
                "income": {
                  "type": "boolean",
                  "description": "Is category an income",
                  "example": true
                },
                "color": {
                  "type": "string",
                  "description": "Color of the transaction category",
                  "example": "#6e78e8"
                }
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "categories": [
              {
                "name": "Регулярный доход",
                "income": true,
                "color": "#1b5e20"
              },
              {
                "name": "Продукты",
                "income": false,
                "color": "#4a56e2"
              },
              {
                "name": "Образование",
                "income": false,
                "color": "#c5baff"
              }
            ]
          }
        }
      },
      "getCategoriesSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "Array of categories ojects",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Category ID",
                  "example": "6042f456e080193948016539"
                },
                "name": {
                  "type": "string",
                  "description": "Category's name",
                  "example": "Машина"
                },
                "income": {
                  "type": "boolean",
                  "description": "Is category income",
                  "example": false
                },
                "color": {
                  "type": "string",
                  "description": "Custom color in hex format",
                  "example": "#009688"
                },
                "icon": {
                  "type": "string",
                  "description": "Custom icon name",
                  "example": "car-icon"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's ID",
                  "example": "40e073cfe63c0b3ed49951c1"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date of entry creation",
                  "example": "2022-05-19T17:51:48.716Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Date of entry update",
                  "example": "2022-05-19T17:51:48.716Z"
                }
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "categories": [
              {
                "income": false,
                "color": "#d84315",
                "icon": "car-icon",
                "name": "Машина",
                "owner": "40e073cfe63c0b3ed49951c1",
                "createdAt": "2022-05-19T17:52:48.456Z",
                "updatedAt": "2022-05-19T17:52:48.456Z",
                "id": "60566f5d38023412909f6897"
              },
              {
                "income": true,
                "color": "#ffeb3b",
                "icon": "money-icon",
                "name": "Зарплата",
                "owner": "40e073cfe63c0b3ed49951c1",
                "createdAt": "2022-05-19T17:51:48.716Z",
                "updatedAt": "2022-05-19T17:51:48.716Z",
                "id": "6042f456e080193948016539"
              }
            ]
          }
        }
      },
      "createCategoryRequest": {
        "type": "object",
        "required": ["name", "income"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Category's name",
            "example": "Машина"
          },
          "income": {
            "type": "boolean",
            "description": "Is category income",
            "example": false
          },
          "color": {
            "type": "string",
            "description": "Custom color in hex format",
            "example": "#009688"
          },
          "icon": {
            "type": "string",
            "description": "Custom icon name",
            "example": "car-icon"
          }
        }
      },
      "createCategorySuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 201
          },
          "data": {
            "type": "object",
            "description": "Information about newly created category",
            "properties": {
              "id": {
                "type": "string",
                "description": "Category ID",
                "example": "6042f456e080193948016539"
              },
              "name": {
                "type": "string",
                "description": "Category's name",
                "example": "Машина"
              },
              "income": {
                "type": "boolean",
                "description": "Is category income",
                "example": false
              },
              "color": {
                "type": "string",
                "description": "Custom color in hex format",
                "example": "#009688"
              },
              "icon": {
                "type": "string",
                "description": "Custom icon name",
                "example": "car-icon"
              },
              "owner": {
                "type": "string",
                "description": "Owner's ID",
                "example": "40e073cfe63c0b3ed49951c1"
              },
              "createdAt": {
                "type": "string",
                "description": "Date of entry creation",
                "example": "2022-05-19T17:51:48.716Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of entry update",
                "example": "2022-05-19T17:51:48.716Z"
              }
            }
          }
        }
      },
      "createCategoryErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Joi validation error message",
            "example": "'income' is required"
          }
        }
      },
      "getCategorySuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "Сategory object",
            "properties": {
              "category": {
                "type": "object",
                "description": "Category object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Category ID",
                    "example": "6042f456e080193948016539"
                  },
                  "name": {
                    "type": "string",
                    "description": "Category's name",
                    "example": "Машина"
                  },
                  "income": {
                    "type": "boolean",
                    "description": "Is category income",
                    "example": false
                  },
                  "color": {
                    "type": "string",
                    "description": "Custom color",
                    "example": "#009688"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Custom icon name",
                    "example": "car-icon"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Owner's ID",
                    "example": "40e073cfe63c0b3ed49951c1"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Date of entry creation",
                    "example": "2022-05-19T17:51:48.716Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Date of entry update",
                    "example": "2022-05-19T17:51:48.716Z"
                  }
                }
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "category": {
              "income": false,
              "color": "#d84315",
              "icon": "car-icon",
              "name": "Машина",
              "owner": "40e073cfe63c0b3ed49951c1",
              "createdAt": "2022-05-19T17:51:48.716Z",
              "updatedAt": "2022-05-19T17:51:48.716Z",
              "id": "6042f456e080193948016539"
            }
          }
        }
      },
      "updateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category's name",
            "example": "Машина"
          },
          "income": {
            "type": "boolean",
            "description": "Is category income",
            "example": false
          },
          "color": {
            "type": "string",
            "description": "Custom color in hex format",
            "example": "#009688"
          },
          "icon": {
            "type": "string",
            "description": "Custom icon name",
            "example": "car-icon"
          }
        }
      },
      "deleteCategorySuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Category was successfully deleted."
          }
        }
      },
      "createTransactionRequest": {
        "type": "object",
        "required": ["date", "income", "category", "sum"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction's date indicated by user",
            "example": "2022-05-19"
          },
          "income": {
            "type": "boolean",
            "description": "Is transaction income",
            "example": false
          },
          "category": {
            "type": "string",
            "description": "Category of transaction",
            "example": "Основные расходы"
          },
          "comment": {
            "type": "string",
            "description": "User's comment about transaction",
            "example": "Кофе"
          },
          "sum": {
            "type": "integer",
            "description": "Sum of transaction",
            "example": 45
          }
        }
      },
      "createTransactionSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 201
          },
          "data": {
            "type": "object",
            "description": "Information about created tansaction",
            "properties": {
              "id": {
                "type": "string",
                "description": "Transaction ID",
                "example": "6042f456e080193948016539"
              },
              "date": {
                "type": "string",
                "description": "Transaction's date indicated by user",
                "example": "2022-05-17"
              },
              "income": {
                "type": "boolean",
                "description": "Is transaction income",
                "example": false
              },
              "category": {
                "type": "string",
                "description": "Category of transaction",
                "example": "Продукты"
              },
              "comment": {
                "type": "string",
                "description": "User's comment about transaction",
                "example": "Продукты на неделю"
              },
              "sum": {
                "type": "integer",
                "description": "Sum of transaction",
                "example": 1400
              },
              "createdAt": {
                "type": "string",
                "description": "Date of entry creation",
                "example": "2022-05-19T17:51:48.716Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of entry update",
                "example": "2022-05-19T17:51:48.716Z"
              }
            }
          }
        }
      },
      "createTransactionErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Joi validation error message",
            "example": "'date' must be in YYYY-MM-DD format"
          }
        }
      },
      "updateTransactionRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction's date",
            "example": "2022-05-19"
          },
          "income": {
            "type": "boolean",
            "description": "Is transaction income",
            "example": false
          },
          "category": {
            "type": "string",
            "description": "Category of transaction",
            "example": "Основные расходы"
          },
          "comment": {
            "type": "string",
            "description": "User's comment about transaction",
            "example": "Кофе"
          },
          "sum": {
            "type": "integer",
            "description": "Sum of transaction",
            "example": 45
          }
        }
      },
      "getTransactionsSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "Information about tansactions and balance totals",
            "properties": {
              "transactions": {
                "type": "array",
                "description": "Array of transactions objects",
                "items": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Transaction ID",
                      "example": "628690f312bcd3046967abf9"
                    },
                    "category": {
                      "type": "string",
                      "description": "Category of transaction",
                      "example": "Регулярный доход"
                    },
                    "income": {
                      "type": "boolean",
                      "description": "Is category an income",
                      "example": true
                    },
                    "date": {
                      "type": "string",
                      "description": "Date indicated by the user",
                      "example": "2022-05-19T00:00:00.000Z"
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment for the transaction",
                      "example": "Зарплата"
                    },
                    "sum": {
                      "type": "integer",
                      "description": "Amount of the transaction",
                      "example": 5000
                    },
                    "owner": {
                      "type": "string",
                      "description": "ID of the user who created the transaction",
                      "example": "40e073cfe63c0b3ed49951c1"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date of entry creation",
                      "example": "2022-05-19T17:51:48.716Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date of entry update",
                      "example": "2022-05-19T17:51:48.716Z"
                    }
                  }
                }
              },
              "totals": {
                "type": "object",
                "properties": {
                  "income": {
                    "type": "integer",
                    "description": "Amount of total income",
                    "example": 5000
                  },
                  "expense": {
                    "type": "integer",
                    "description": "Amount of total expenses",
                    "example": 200
                  },
                  "balance": {
                    "type": "integer",
                    "description": "Amount of total current balance",
                    "example": 4800
                  }
                }
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "transactions": [
              {
                "id": "628690f312bcd3046967abf9",
                "category": "Регулярный доход",
                "income": true,
                "date": "2022-05-19T00:00:00.000Z",
                "comment": "Зарплата",
                "sum": 5000,
                "createdAt": "2022-05-19T17:51:48.716Z",
                "updatedAt": "2022-05-19T17:51:48.716Z"
              },
              {
                "id": "70e2f576e0405939c801653b",
                "category": "Основные расходы",
                "income": false,
                "date": "2022-05-19T00:00:00.000Z",
                "comment": "Еда",
                "sum": 200,
                "createdAt": "2022-05-19T17:51:48.716Z",
                "updatedAt": "2022-05-19T17:51:48.716Z"
              }
            ],
            "totals": {
              "income": 5000,
              "expense": 200,
              "balance": 4800
            }
          }
        }
      },
      "getTransactionSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "Payload with information about tansactions and balance totals",
            "properties": {
              "transaction": {
                "type": "object",
                "description": "Requested transaction",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Transaction ID",
                    "example": "628682f56ae1b0812d14a878"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of transaction",
                    "example": "Еда"
                  },
                  "income": {
                    "type": "boolean",
                    "description": "Is category an income",
                    "example": true
                  },
                  "date": {
                    "type": "string",
                    "description": "Date indicated by the user",
                    "example": "2022-05-19T00:00:00.000Z"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment for the transaction",
                    "example": "Еда на неделю"
                  },
                  "sum": {
                    "type": "integer",
                    "description": "Amount of the transaction",
                    "example": 700
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Date of entry creation",
                    "example": "2022-05-19T17:51:48.716Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Date of entry update",
                    "example": "2022-05-19T17:51:48.716Z"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Owner's ID",
                    "example": "40e073cfe63c0b3ed49951c1"
                  }
                }
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "transaction": {
              "income": false,
              "category": "Еда",
              "comment": "Продукты на неделю",
              "date": "2022-05-19T00:00:00.000Z",
              "sum": 700,
              "owner": "40e073cfe63c0b3ed49951c1",
              "createdAt": "2022-05-19T17:51:48.716Z",
              "updatedAt": "2022-05-19T17:51:48.716Z",
              "id": "628682f56ae1b0812d14a878"
            }
          }
        }
      },
      "deleteTransactionSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "HTTP code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Transaction was successfully deleted."
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andrii"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
  
    